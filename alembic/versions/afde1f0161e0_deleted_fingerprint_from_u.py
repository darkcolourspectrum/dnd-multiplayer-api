"""deleted fingerprint from U

Revision ID: afde1f0161e0
Revises: 039b9c8fe5cd
Create Date: 2025-03-24 21:09:54.571202

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'afde1f0161e0'
down_revision: Union[str, None] = '039b9c8fe5cd'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_access_tokens_id', table_name='access_tokens')
    op.drop_index('ix_access_tokens_token', table_name='access_tokens')
    op.drop_table('access_tokens')
    op.alter_column('refresh_tokens', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('refresh_tokens', 'fingerprint',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('refresh_tokens', 'expires_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.add_column('users', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.alter_column('users', 'nickname',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('users', 'hashed_password',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('users', 'fingerprint')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('fingerprint', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.alter_column('users', 'hashed_password',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('users', 'nickname',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('users', 'created_at')
    op.alter_column('refresh_tokens', 'expires_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('refresh_tokens', 'fingerprint',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('refresh_tokens', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_table('access_tokens',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('token', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('issued_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='access_tokens_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='access_tokens_pkey')
    )
    op.create_index('ix_access_tokens_token', 'access_tokens', ['token'], unique=True)
    op.create_index('ix_access_tokens_id', 'access_tokens', ['id'], unique=False)
    # ### end Alembic commands ###
